### Taken from https://wiki.archlinux.org/title/Toolbox
FROM docker.io/archlinux/archlinux:latest

ENV NAME=arch-toolbox VERSION=rolling

LABEL com.github.containers.toolbox="true" \
  name="$NAME" \
  version="$VERSION"

# Set locale
RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
  && locale-gen \
  && echo "LANG=en_US.UTF-8" > /etc/locale.conf

RUN pacman -Syu --noconfirm \
  && pacman -S sudo --noconfirm \
  && pacman -Scc --noconfirm \
  && echo "%wheel ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/toolbox

CMD ["bash"]
###

# Install base packages
ENV EDITOR=nvim
RUN pacman -S --noconfirm \
  bc zip unzip curl wget openssh bash-completion bind \
  base-devel git cmake protobuf \
  aws-cli-v2 terraform \
  fzf ripgrep neovim wl-clipboard \
  python-setuptools python-pip python-virtualenv python-pipx \
  neofetch

# Install python tooling
ENV PIPX_HOME=/opt/pipx
ENV PIPX_BIN_DIR=/usr/local/bin
RUN pipx install pylsp-mypy --include-deps \
  && pipx inject pylsp-mypy pylint \
  && pipx install black --include-deps \
  && pipx install isort --include-deps \
  && pipx install awsume --include-deps
#   && pipx install poetry --include-deps \
#   && pipx inject poetry keyring keyrings.google-artifactregistry-auth

# Install asdf
ENV ASDF_DATA_DIR=/opt/asdf
## cpio is the only makedep from asdf
RUN pacman -S --noconfirm cpio \
  && sudo -u nobody git clone https://aur.archlinux.org/asdf-vm.git /tmp/asdf-vm \
  && cd /tmp/asdf-vm \
  && sudo -u nobody makepkg \
  && pacman -U --noconfirm asdf-vm-*.pkg.tar.zst \
  && mkdir -p $ASDF_DATA_DIR \
  && chgrp -R wheel $ASDF_DATA_DIR \
  && chmod -R 775 $ASDF_DATA_DIR \
  && echo ". /opt/asdf-vm/asdf.sh" >> /etc/profile \
  && rm -rf /tmp/asdf-vm

# Install asdf plugins
ENV ASDF_PYTHON_DEFAULT_PACKAGES_FILE=/opt/asdf/.default-python-packages
COPY .default-python-packages /opt/asdf/.default-python-packages
RUN source /etc/profile \
  && asdf plugin add python \
  && asdf install python 3.10.10

# Install grpcurl
RUN sudo -u nobody git clone https://aur.archlinux.org/grpcurl-bin.git /tmp/grpcurl-bin \
  && cd /tmp/grpcurl-bin \
  && sudo -u nobody makepkg \
  && pacman -U --noconfirm grpcurl-bin-*.pkg.tar.zst

# Install protoc-gen-grpc-web
RUN sudo -u nobody git clone https://aur.archlinux.org/protoc-gen-grpc-web.git /tmp/protoc-gen-grpc-web \
  && cd /tmp/protoc-gen-grpc-web \
  && sudo -u nobody makepkg \
  && pacman -U --noconfirm protoc-gen-grpc-web-*.pkg.tar.zst

# Install hadolint
RUN sudo -u nobody git clone https://aur.archlinux.org/hadolint-bin.git /tmp/hadolint-bin \
  && cd /tmp/hadolint-bin \
  && sudo -u nobody makepkg \
  && pacman -U --noconfirm hadolint-bin-*.pkg.tar.zst

# Install gcloud
  # wget -O /tmp/$gcloud_archive https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/$gcloud_archive --progress=dot:giga \
RUN gcloud_version="416.0.0"; \
  gcloud_sha256sum="b7e8a9ac9470a8fe6f251994ad4c25ea483aa9942e44e43562ef77be13f257a1"; \
  gcloud_archive="google-cloud-cli-$gcloud_version-linux-x86_64.tar.gz"; \
  wget -O /tmp/$gcloud_archive https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/$gcloud_archive --progress=dot:giga \
  && echo "$gcloud_sha256sum /tmp/$gcloud_archive" | sha256sum --strict --check - \
  && tar -C /opt -xf /tmp/$gcloud_archive \
  && /opt/google-cloud-sdk/install.sh -q

# Install terraform-ls
RUN sudo -u nobody git clone https://aur.archlinux.org/terraform-ls-bin.git /tmp/terraform-ls-bin \
  && cd /tmp/terraform-ls-bin \
  && sudo -u nobody makepkg \
  && pacman -U --noconfirm terraform-ls-bin-*.pkg.tar.zst
